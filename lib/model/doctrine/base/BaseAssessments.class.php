<?php

/**
 * BaseAssessments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int          $id                          Type: integer, primary key
 * @property int          $checklist_id                Type: integer
 * @property string       $reference                   Type: string(255)
 * @property int          $day                         Type: int
 * @property int          $month                       Type: int
 * @property int          $year                        Type: int
 * @property string       $day_of_week                 Type: string
 * @property string       $version_at                  Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @property double       $value                       Type: double
 * @property CheckList    $CheckList                   
 *  
 * @method int            getId()                      Type: integer, primary key
 * @method int            getChecklistId()             Type: integer
 * @method string         getReference()               Type: string(255)
 * @method int            getDay()                     Type: int
 * @method int            getMonth()                   Type: int
 * @method int            getYear()                    Type: int
 * @method string         getDayOfWeek()               Type: string
 * @method string         getVersionAt()               Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @method double         getValue()                   Type: double
 * @method CheckList      getCheckList()               
 *  
 * @method Assessments    setId(int $val)              Type: integer, primary key
 * @method Assessments    setChecklistId(int $val)     Type: integer
 * @method Assessments    setReference(string $val)    Type: string(255)
 * @method Assessments    setDay(int $val)             Type: int
 * @method Assessments    setMonth(int $val)           Type: int
 * @method Assessments    setYear(int $val)            Type: int
 * @method Assessments    setDayOfWeek(string $val)    Type: string
 * @method Assessments    setVersionAt(string $val)    Type: timestamp, Timestamp in ISO-8601 format (YYYY-MM-DD HH:MI:SS)
 * @method Assessments    setValue(double $val)        Type: double
 * @method Assessments    setCheckList(CheckList $val) 
 *  
 * @package    check-list
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAssessments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('assessments');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('checklist_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('reference', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('day', 'int', null, array(
             'type' => 'int',
             ));
        $this->hasColumn('month', 'int', null, array(
             'type' => 'int',
             ));
        $this->hasColumn('year', 'int', null, array(
             'type' => 'int',
             ));
        $this->hasColumn('day_of_week', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('version_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('value', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CheckList', array(
             'local' => 'checklist_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}